{"version":3,"file":"uniqueScript12.bundle.js","mappings":"yKAEO,SAASA,IACZ,SAASC,IAML,IAJiB,KAAYC,aAAaC,OAAOC,eAAiB,IACjDC,SAAS,gBAClBC,OAAOC,SAASC,SAASH,SAAS,oBAEnB,CACnB,MAAMI,EAAMC,SAASC,eAAe,gBAC9BC,EAAQN,OAAOO,GAAGD,MACxB,IAAKH,IAAQG,EACT,OACJ,MAAME,EAASR,OAAOC,SAASO,OACzBC,EAAgBC,KAAKC,MACrBC,EAAa,GAAGJ,yCAA8CF,aAAiBG,IAEjFN,EAAIU,IAAIC,WAAW,GAAGN,cACtBL,EAAIU,IAAMD,EACVT,EAAIY,MAAQ,IACZZ,EAAIa,MAAMC,OAAS,QAGvB,MAAMC,EAAWC,aAAY,KACrBhB,EAAIU,IAAIC,WAAW,GAAGN,cACtBL,EAAIU,IAAMD,EACVT,EAAIY,MAAQ,IACZZ,EAAIa,MAAMC,OAAS,OACvB,GACD,KAEHG,YAAW,KACPC,cAAcH,EAAS,GACxB,IACP,CACJ,CAC4B,YAAxBd,SAASkB,WACTlB,SAASmB,iBAAiB,mBAAoB5B,GAG9CA,IAEA,IAAWC,YAAgB,IAAe4B,qBAE1C,IAAW5B,YAAgB,IAAe6B,gBAE1C,IAAW7B,YAAgB,IAAe8B,cAElD,CACAhC,IACA,WACI,MAAMiC,EAAU,CACZC,KAAM,UACNC,QAAS,eACT,aAAc,UACd,gBAAiB,oBAEfC,EAAa,KACf,MAAMC,EAAY3B,SAAS4B,iBAAiB,YACnB,IAArBD,EAAUE,OAIdF,EAAUG,SAASC,IACf,MAAMC,EAAOD,EAAKE,cAAc,KAChC,GAAID,EAAM,CACN,MAAME,EAAUF,EAAKG,aAAa1C,OAAO2C,cACnCC,EAAaC,OAAOC,KAAKhB,GAASiB,MAAMC,GAAQP,GAASxB,WAAW+B,KACpEC,EAAYL,EAAad,EAAQc,GAAc,GACrD,GAAIK,EAAW,CACX,MAAMC,EAAaT,GAASU,MAAM,eAAe,GACjDZ,EAAKa,UAAY,sDAEhBH,kBACbC,EAAa,uBAAuBA,WAAsB,sBAG9CX,EAAKc,aAAa,QAASZ,GAAW,GAC1C,CACJ,KAnBAlB,WAAWU,EAAY,IAoBzB,EAEkB,YAAxB1B,SAASkB,WACHlB,SAASmB,iBAAiB,mBAAoBO,GAC9CA,GACV,CACAqB,E","sources":["webpack://vivid-storefronts/./src/store_scripts/CampusFederal/index.ts"],"sourcesContent":["import { StorefrontPage } from \"../../enums/StorefrontPage.enum\";\nimport { GLOBALVARS } from \"../../index\";\nexport function main() {\n    function init() {\n        const isAddToCartPage = () => {\n            const page = GLOBALVARS?.currentPage?.trim().toLowerCase() || \"\";\n            return (page.includes(\"add to cart\") ||\n                window.location.pathname.includes(\"/cart/3-edit.php\"));\n        };\n        if (isAddToCartPage()) {\n            const img = document.getElementById(\"productImage\");\n            const artID = window.p?.artID;\n            if (!img || !artID)\n                return;\n            const origin = window.location.origin;\n            const uniqueNoCache = Date.now();\n            const desiredURL = `${origin}/catalog/gen/pdf_art_image.php?artID=${artID}&nocache=${uniqueNoCache}`;\n            // Only replace if it's the old thumbnail\n            if (img.src.startsWith(`${origin}/.cache`)) {\n                img.src = desiredURL;\n                img.width = 400;\n                img.style.height = \"auto\";\n            }\n            // Watch for AJAX overwrites for a short time\n            const interval = setInterval(() => {\n                if (img.src.startsWith(`${origin}/.cache`)) {\n                    img.src = desiredURL;\n                    img.width = 400;\n                    img.style.height = \"auto\";\n                }\n            }, 300);\n            // Stop checking after 10 seconds\n            setTimeout(() => {\n                clearInterval(interval);\n            }, 10000);\n        }\n    }\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", init);\n    }\n    else {\n        init();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTCONFIRMATION) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTPAYMENT) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTREVIEW) {\n    }\n}\nmain();\nfunction convertMenuTextToIcons() {\n    const iconMap = {\n        HOME: \"fa-home\",\n        CATALOG: \"fa-book-open\",\n        \"MY ACCOUNT\": \"fa-user\",\n        \"SHOPPING CART\": \"fa-shopping-cart\",\n    };\n    const tryConvert = () => {\n        const menuItems = document.querySelectorAll(\"#menu li\");\n        if (menuItems.length === 0) {\n            setTimeout(tryConvert, 200);\n            return;\n        }\n        menuItems.forEach((item) => {\n            const link = item.querySelector(\"a\");\n            if (link) {\n                const rawText = link.textContent?.trim().toUpperCase();\n                const matchedKey = Object.keys(iconMap).find((key) => rawText?.startsWith(key));\n                const iconClass = matchedKey ? iconMap[matchedKey] : \"\";\n                if (iconClass) {\n                    const countMatch = rawText?.match(/\\((\\d+)\\)/)?.[1];\n                    link.innerHTML = `\n    <span class=\"icon-wrap\">\n      <i class=\"fa ${iconClass}\"></i>\n      ${countMatch ? `<span class=\"badge\">${countMatch}</span>` : \"\"}\n    </span>\n  `;\n                    link.setAttribute(\"title\", rawText || \"\");\n                }\n            }\n        });\n    };\n    document.readyState === \"loading\"\n        ? document.addEventListener(\"DOMContentLoaded\", tryConvert)\n        : tryConvert();\n}\nconvertMenuTextToIcons();\n"],"names":["main","init","currentPage","trim","toLowerCase","includes","window","location","pathname","img","document","getElementById","artID","p","origin","uniqueNoCache","Date","now","desiredURL","src","startsWith","width","style","height","interval","setInterval","setTimeout","clearInterval","readyState","addEventListener","CHECKOUTCONFIRMATION","CHECKOUTPAYMENT","CHECKOUTREVIEW","iconMap","HOME","CATALOG","tryConvert","menuItems","querySelectorAll","length","forEach","item","link","querySelector","rawText","textContent","toUpperCase","matchedKey","Object","keys","find","key","iconClass","countMatch","match","innerHTML","setAttribute","convertMenuTextToIcons"],"sourceRoot":""}