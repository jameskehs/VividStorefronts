{"version":3,"file":"uniqueScript76.bundle.js","mappings":"wKAIO,SAASA,IACZC,QAAQC,IAAI,IAAWC,aACnB,IAAWA,YAAgB,IAAeC,UAE1C,IAAWD,YAAgB,IAAeE,KAE1C,IAAWF,YAAgB,IAAeG,QAE1C,IAAWH,YAAgB,IAAeI,gBAE1C,IAAWJ,YAAgB,IAAeK,qBAE1C,IAAWL,YAAgB,IAAeM,gBAE1C,IAAWN,YAAgB,IAAeO,eAE1C,IAAWP,YAAgB,IAAeQ,iBAE1C,IAAWR,YAAgB,IAAeS,kBAE1C,IAAWT,YAAgB,IAAeU,kBAE1C,IAAWV,YAAgB,IAAeW,UAE1C,IAAWX,YAAgB,IAAeY,UAElD,EACA,WACI,MAAMC,EAAU,CACZC,KAAM,UACNX,QAAS,eACT,aAAc,UACd,gBAAiB,oBAEfY,EAAa,KACf,MAAMC,EAAYC,SAASC,iBAAiB,YACnB,IAArBF,EAAUG,OAIdH,EAAUI,SAASC,IACf,MAAMC,EAAOD,EAAKE,cAAc,KAChC,GAAID,EAAM,CACN,MAAME,EAAUF,EAAKG,aAAaC,OAAOC,cAEnCC,EAAaC,OAAOC,KAAKjB,GAASkB,MAAMC,GAAQR,GAASS,WAAWD,KACpEE,EAAYN,EAAaf,EAAQe,GAAc,GACrD,GAAIM,EAAW,CACX,MAAMC,EAAaX,GAASY,MAAM,eAAe,GAEjDd,EAAKe,UAAY,sDAEhBH,kBACbC,EAAa,uBAAuBA,WAAsB,sBAG9Cb,EAAKgB,aAAa,QAASd,GAAW,GAC1C,CACJ,KArBAe,WAAWxB,EAAY,IAsBzB,EAEkB,YAAxBE,SAASuB,WACHvB,SAASwB,iBAAiB,mBAAoB1B,GAC9CA,GACV,CACA2B,E","sources":["webpack://vivid-storefronts/./src/store_scripts/ToastedYolk/index.ts"],"sourcesContent":["// <script src=\"https://main--vividstorefronts.netlify.app/main.js\"></script>\n// <script>loadStorefrontScript(brandingProfile)</script>\nimport { StorefrontPage } from \"../../enums/StorefrontPage.enum\";\nimport { GLOBALVARS } from \"../../index\";\nexport function main() {\n    console.log(GLOBALVARS.currentPage);\n    if (GLOBALVARS.currentPage === StorefrontPage.ADDTOCART) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CART) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CATALOG) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTADDRESS) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTCONFIRMATION) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTPAYMENT) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTREVIEW) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTSHIPPING) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CREATEEDITACCOUNT) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CUSTOMIZETEMPLATE) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.MYACCOUNT) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.VIEWORDERS) {\n    }\n}\nfunction convertMenuTextToIcons() {\n    const iconMap = {\n        HOME: \"fa-home\",\n        CATALOG: \"fa-book-open\",\n        \"MY ACCOUNT\": \"fa-user\",\n        \"SHOPPING CART\": \"fa-shopping-cart\",\n    };\n    const tryConvert = () => {\n        const menuItems = document.querySelectorAll(\"#menu li\");\n        if (menuItems.length === 0) {\n            setTimeout(tryConvert, 200);\n            return;\n        }\n        menuItems.forEach((item) => {\n            const link = item.querySelector(\"a\");\n            if (link) {\n                const rawText = link.textContent?.trim().toUpperCase();\n                // Match based on start of menu text\n                const matchedKey = Object.keys(iconMap).find((key) => rawText?.startsWith(key));\n                const iconClass = matchedKey ? iconMap[matchedKey] : \"\";\n                if (iconClass) {\n                    const countMatch = rawText?.match(/\\((\\d+)\\)/)?.[1];\n                    // Create a container span to wrap icon and badge\n                    link.innerHTML = `\n    <span class=\"icon-wrap\">\n      <i class=\"fa ${iconClass}\"></i>\n      ${countMatch ? `<span class=\"badge\">${countMatch}</span>` : \"\"}\n    </span>\n  `;\n                    link.setAttribute(\"title\", rawText || \"\");\n                }\n            }\n        });\n    };\n    document.readyState === \"loading\"\n        ? document.addEventListener(\"DOMContentLoaded\", tryConvert)\n        : tryConvert();\n}\nconvertMenuTextToIcons();\n"],"names":["main","console","log","currentPage","ADDTOCART","CART","CATALOG","CHECKOUTADDRESS","CHECKOUTCONFIRMATION","CHECKOUTPAYMENT","CHECKOUTREVIEW","CHECKOUTSHIPPING","CREATEEDITACCOUNT","CUSTOMIZETEMPLATE","MYACCOUNT","VIEWORDERS","iconMap","HOME","tryConvert","menuItems","document","querySelectorAll","length","forEach","item","link","querySelector","rawText","textContent","trim","toUpperCase","matchedKey","Object","keys","find","key","startsWith","iconClass","countMatch","match","innerHTML","setAttribute","setTimeout","readyState","addEventListener","convertMenuTextToIcons"],"sourceRoot":""}