{"version":3,"file":"uniqueScript78.bundle.js","mappings":"sHAAO,SAASA,IACZ,IAAKC,SAASC,eAAe,wBAAyB,CAClD,MAAMC,EAAUF,SAASG,cAAc,OACvCD,EAAQE,GAAK,uBACbF,EAAQG,MAAMC,SAAW,QACzBJ,EAAQG,MAAME,IAAM,IACpBL,EAAQG,MAAMG,KAAO,IACrBN,EAAQG,MAAMI,MAAQ,QACtBP,EAAQG,MAAMK,OAAS,QACvBR,EAAQG,MAAMM,gBAAkB,qBAChCT,EAAQG,MAAMO,OAAS,OACvBV,EAAQG,MAAMQ,QAAU,OACxBb,SAASc,KAAKC,YAAYb,EAC9B,CACA,MAAMA,EAAUF,SAASC,eAAe,wBAClCe,EAAeC,aAAY,KAC7B,MAAMC,EAAQlB,SAASmB,cAAc,oBACrC,GAAID,GACAA,EAAME,aAAaC,SAAS,2DAA4D,CACxFnB,EAAQG,MAAMQ,QAAU,QAExB,MAAMS,EAAWJ,EAAMC,cAAc,0BACjCG,GACAA,EAASC,SAEbL,EAAMM,UAAY,wcAMlBC,cAAcT,EAClB,IACD,IACP,C,8FC/BO,SAASU,IACZ,SAASC,IAML,IAJiB,KAAYC,aAAaC,OAAOC,eAAiB,IACjDT,SAAS,gBAClBU,OAAOC,SAASC,SAASZ,SAAS,oBAEnB,CACnB,MAAMa,EAAMlC,SAASC,eAAe,gBAC9BkC,EAAQJ,OAAOK,GAAGD,MACxB,IAAKD,IAAQC,EACT,OACJ,MAAME,EAASN,OAAOC,SAASK,OACzBC,EAAgBC,KAAKC,MACrBC,EAAa,GAAGJ,yCAA8CF,aAAiBG,IAEjFJ,EAAIQ,IAAIC,WAAW,GAAGN,cACtBH,EAAIQ,IAAMD,EACVP,EAAIzB,MAAQ,IACZyB,EAAI7B,MAAMK,OAAS,QAGvB,MAAMkC,EAAW3B,aAAY,KACrBiB,EAAIQ,IAAIC,WAAW,GAAGN,cACtBH,EAAIQ,IAAMD,EACVP,EAAIzB,MAAQ,IACZyB,EAAI7B,MAAMK,OAAS,OACvB,GACD,KAEHmC,YAAW,KACPpB,cAAcmB,EAAS,GACxB,IACP,CACJ,CAC4B,YAAxB5C,SAAS8C,WACT9C,SAAS+C,iBAAiB,mBAAoBpB,GAG9CA,IAEA,IAAWC,cAAgB,IAAeoB,mBAC1CC,EAAE,2BAA2BC,GAAG,GAC3BC,KAAK,8KAEV,UAEA,IAAWvB,YAAgB,IAAewB,qBAE1C,IAAWxB,cAAgB,IAAeyB,iBAC1CtB,OAAOC,SAASC,SAASZ,SAAS,0BAE1C,CACAK,IACA,WACI,MAAM4B,EAAU,CACZC,KAAM,UACNC,QAAS,eACT,aAAc,UACd,gBAAiB,oBAEfC,EAAa,KACf,MAAMC,EAAY1D,SAAS2D,iBAAiB,YACnB,IAArBD,EAAUE,OAIdF,EAAUG,SAASC,IACf,MAAMC,EAAOD,EAAK3C,cAAc,KAChC,GAAI4C,EAAM,CACN,MAAMC,EAAUD,EAAK3C,aAAaS,OAAOoC,cACnCC,EAAaC,OAAOC,KAAKd,GAASe,MAAMC,GAAQN,GAASrB,WAAW2B,KACpEC,EAAYL,EAAaZ,EAAQY,GAAc,GACrD,GAAIK,EAAW,CACX,MAAMC,EAAaR,GAASS,MAAM,eAAe,GACjDV,EAAKvC,UAAY,sDAEhB+C,kBACbC,EAAa,uBAAuBA,WAAsB,sBAG9CT,EAAKW,aAAa,QAASV,GAAW,GAC1C,CACJ,KAnBAnB,WAAWY,EAAY,IAoBzB,EAEkB,YAAxBzD,SAAS8C,WACH9C,SAAS+C,iBAAiB,mBAAoBU,GAC9CA,GACV,CACAkB,E","sources":["webpack://vivid-storefronts/./src/shared/BlockOnResidentialToast.ts","webpack://vivid-storefronts/./src/store_scripts/WilliamsonEye/index.ts"],"sourcesContent":["export function monitorResidentialToastAndBlockPage() {\n    if (!document.getElementById(\"page-blocker-overlay\")) {\n        const overlay = document.createElement(\"div\");\n        overlay.id = \"page-blocker-overlay\";\n        overlay.style.position = \"fixed\";\n        overlay.style.top = \"0\";\n        overlay.style.left = \"0\";\n        overlay.style.width = \"100vw\";\n        overlay.style.height = \"100vh\";\n        overlay.style.backgroundColor = \"rgba(0, 0, 0, 0.3)\";\n        overlay.style.zIndex = \"9998\";\n        overlay.style.display = \"none\";\n        document.body.appendChild(overlay);\n    }\n    const overlay = document.getElementById(\"page-blocker-overlay\");\n    const pollInterval = setInterval(() => {\n        const toast = document.querySelector(\".jq-toast-single\");\n        if (toast &&\n            toast.textContent?.includes(\"The USPS database indicates your address is Residential\")) {\n            overlay.style.display = \"block\";\n            // Remove the close (Ã—) button\n            const closeBtn = toast.querySelector(\".close-jq-toast-single\");\n            if (closeBtn)\n                closeBtn.remove();\n            // Replace toast content with updated message and inline \"go back\" link\n            toast.innerHTML = `\n        <strong class=\"sans red\">Important Message</strong><br>\n        The USPS database indicates your address is Residential, but you have it flagged as Commercial.<br>\n        Please <a href=\"5-shipping.php\" style=\"color: red; font-weight: bold; text-decoration: underline;\">go back</a> and click the Verify Address button to ensure the most reliable package delivery.<br>\n        We verify all addresses with the USPS address database.\n      `;\n            clearInterval(pollInterval);\n        }\n    }, 300);\n}\n","import { StorefrontPage } from \"../../enums/StorefrontPage.enum\";\nimport { GLOBALVARS } from \"../../index\";\nimport { monitorResidentialToastAndBlockPage } from \"../../shared/BlockOnResidentialToast\";\nexport function main() {\n    function init() {\n        const isAddToCartPage = () => {\n            const page = GLOBALVARS?.currentPage?.trim().toLowerCase() || \"\";\n            return (page.includes(\"add to cart\") ||\n                window.location.pathname.includes(\"/cart/3-edit.php\"));\n        };\n        if (isAddToCartPage()) {\n            const img = document.getElementById(\"productImage\");\n            const artID = window.p?.artID;\n            if (!img || !artID)\n                return;\n            const origin = window.location.origin;\n            const uniqueNoCache = Date.now();\n            const desiredURL = `${origin}/catalog/gen/pdf_art_image.php?artID=${artID}&nocache=${uniqueNoCache}`;\n            // Only replace if it's the old thumbnail\n            if (img.src.startsWith(`${origin}/.cache`)) {\n                img.src = desiredURL;\n                img.width = 400;\n                img.style.height = \"auto\";\n            }\n            // Watch for AJAX overwrites for a short time\n            const interval = setInterval(() => {\n                if (img.src.startsWith(`${origin}/.cache`)) {\n                    img.src = desiredURL;\n                    img.width = 400;\n                    img.style.height = \"auto\";\n                }\n            }, 300);\n            // Stop checking after 10 seconds\n            setTimeout(() => {\n                clearInterval(interval);\n            }, 10000);\n        }\n    }\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", init);\n    }\n    else {\n        init();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTSHIPPING) {\n        $(\"#continueTbl .smallbody\").eq(1)\n            .html(`<span class=\"red\">*</span> Delivery time listed includes 1 to 2 days to process order plus shipping.\n      Please note we do not process orders on weekends or holidays.`);\n        monitorResidentialToastAndBlockPage();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTCONFIRMATION) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTPAYMENT ||\n        window.location.pathname.includes(\"/checkout/4-payment.php\")) {\n    }\n}\nmain();\nfunction convertMenuTextToIcons() {\n    const iconMap = {\n        HOME: \"fa-home\",\n        CATALOG: \"fa-book-open\",\n        \"MY ACCOUNT\": \"fa-user\",\n        \"SHOPPING CART\": \"fa-shopping-cart\",\n    };\n    const tryConvert = () => {\n        const menuItems = document.querySelectorAll(\"#menu li\");\n        if (menuItems.length === 0) {\n            setTimeout(tryConvert, 200);\n            return;\n        }\n        menuItems.forEach((item) => {\n            const link = item.querySelector(\"a\");\n            if (link) {\n                const rawText = link.textContent?.trim().toUpperCase();\n                const matchedKey = Object.keys(iconMap).find((key) => rawText?.startsWith(key));\n                const iconClass = matchedKey ? iconMap[matchedKey] : \"\";\n                if (iconClass) {\n                    const countMatch = rawText?.match(/\\((\\d+)\\)/)?.[1];\n                    link.innerHTML = `\n    <span class=\"icon-wrap\">\n      <i class=\"fa ${iconClass}\"></i>\n      ${countMatch ? `<span class=\"badge\">${countMatch}</span>` : \"\"}\n    </span>\n  `;\n                    link.setAttribute(\"title\", rawText || \"\");\n                }\n            }\n        });\n    };\n    document.readyState === \"loading\"\n        ? document.addEventListener(\"DOMContentLoaded\", tryConvert)\n        : tryConvert();\n}\nconvertMenuTextToIcons();\n"],"names":["monitorResidentialToastAndBlockPage","document","getElementById","overlay","createElement","id","style","position","top","left","width","height","backgroundColor","zIndex","display","body","appendChild","pollInterval","setInterval","toast","querySelector","textContent","includes","closeBtn","remove","innerHTML","clearInterval","main","init","currentPage","trim","toLowerCase","window","location","pathname","img","artID","p","origin","uniqueNoCache","Date","now","desiredURL","src","startsWith","interval","setTimeout","readyState","addEventListener","CHECKOUTSHIPPING","$","eq","html","CHECKOUTCONFIRMATION","CHECKOUTPAYMENT","iconMap","HOME","CATALOG","tryConvert","menuItems","querySelectorAll","length","forEach","item","link","rawText","toUpperCase","matchedKey","Object","keys","find","key","iconClass","countMatch","match","setAttribute","convertMenuTextToIcons"],"sourceRoot":""}