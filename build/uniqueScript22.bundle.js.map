{"version":3,"file":"uniqueScript22.bundle.js","mappings":"yKAGO,SAASA,IAEZ,OADAC,QAAQC,IAAI,IAAWC,aACf,IAAWA,aACf,KAAK,IAAeC,UACpB,KAAK,IAAeC,KACpB,KAAK,IAAeC,QACpB,KAAK,IAAeC,gBACpB,KAAK,IAAeC,qBACpB,KAAK,IAAeC,eACpB,KAAK,IAAeC,iBACpB,KAAK,IAAeC,kBACpB,KAAK,IAAeC,kBACpB,KAAK,IAAeC,UACpB,KAAK,IAAeC,WAChB,MACJ,KAAK,IAAeC,iBClBrB,WACH,MAAMC,EAAWC,aAAY,KACzB,MAAMC,EAAkBC,SAASC,eAAe,iBAC1CC,EAAYF,SAASC,eAAe,SACpCE,EAAaH,SAASC,eAAe,cACrCG,EAAUJ,SAASK,cAAc,8BACjCC,EAAiBN,SAASC,eAAe,yBAC/C,GAAIF,GACAG,GACAC,GACAC,GACAE,EAAgB,CAChBC,cAAcV,GAEdO,EAAQI,YAAc,cACtB,MAAMC,EAAoB,KACtB,MAAMC,EAAeX,EAAgBY,QAC/BC,EAAQT,EAAWU,MAAMC,OAAOC,OAAS,EAC/CZ,EAAWa,SAAWN,EACtBP,EAAWc,YAAcP,EAAe,WAAa,WACrDP,EAAWe,UAAUC,OAAO,WAAYT,GAGpCJ,EAAec,MAAMC,QADrBX,IAAiBE,EACc,OAGA,EACnC,EAGJb,EAAgBuB,iBAAiB,SAAUb,GAC3CP,EAAUoB,iBAAiB,SAAUb,GACrCN,EAAWmB,iBAAiB,QAASb,GACrCN,EAAWmB,iBAAiB,OAAQb,GAEpCA,GACJ,IACD,IACP,CDnBYc,GAKZ,WACI,MAAM1B,EAAWC,aAAY,KACzB,MAAM0B,EAAUxB,SAASK,cAAc,8BACjCF,EAAaH,SAASC,eAAe,cAC3C,GAAIuB,GAAWrB,EAAY,CACvBI,cAAcV,GAEd2B,EAAQhB,YAAc,cAEtB,MAAMT,EAAkBC,SAASC,eAAe,iBAC1CC,EAAYF,SAASC,eAAe,SACpCwB,EAAiB,KACf1B,GAAiBY,SACjBR,EAAWa,UAAW,EACtBb,EAAWc,YAAc,aAGzBd,EAAWa,UAAW,EACtBb,EAAWc,YAAc,WAC7B,EAEJlB,GAAiBuB,iBAAiB,SAAUG,GAC5CvB,GAAWoB,iBAAiB,SAAUG,GAEtCA,GACJ,IACD,IACP,CA/BYC,GAGZ,C","sources":["webpack://vivid-storefronts/./src/store_scripts/DPiAnesthesia/index.ts","webpack://vivid-storefronts/./src/shared/requireCustomerPO.ts"],"sourcesContent":["import { StorefrontPage } from \"../../enums/StorefrontPage.enum\";\nimport { GLOBALVARS } from \"../../index\";\nimport { setupCustomerPORequirement } from \"../../shared/requireCustomerPO\";\nexport function main() {\n    console.log(GLOBALVARS.currentPage);\n    switch (GLOBALVARS.currentPage) {\n        case StorefrontPage.ADDTOCART:\n        case StorefrontPage.CART:\n        case StorefrontPage.CATALOG:\n        case StorefrontPage.CHECKOUTADDRESS:\n        case StorefrontPage.CHECKOUTCONFIRMATION:\n        case StorefrontPage.CHECKOUTREVIEW:\n        case StorefrontPage.CHECKOUTSHIPPING:\n        case StorefrontPage.CREATEEDITACCOUNT:\n        case StorefrontPage.CUSTOMIZETEMPLATE:\n        case StorefrontPage.MYACCOUNT:\n        case StorefrontPage.VIEWORDERS:\n            break;\n        case StorefrontPage.CHECKOUTPAYMENT:\n            setupCustomerPORequirement(); // Existing logic\n            customizePaymentMethod(); // Custom logic for button + input field\n            break;\n    }\n}\nfunction customizePaymentMethod() {\n    const interval = setInterval(() => {\n        const poRadio = document.querySelector(\"label[for='purchaseOrder']\");\n        const customerPO = document.getElementById(\"customerPO\");\n        if (poRadio && customerPO) {\n            clearInterval(interval);\n            // Rename the label text to \"Promo Order\"\n            poRadio.textContent = \"Promo Order\";\n            // Handle required field dynamically\n            const promoOrderRadio = document.getElementById(\"purchaseOrder\");\n            const cardRadio = document.getElementById(\"newCC\");\n            const updateRequired = () => {\n                if (promoOrderRadio?.checked) {\n                    customerPO.required = true;\n                    customerPO.placeholder = \"required\";\n                }\n                else {\n                    customerPO.required = false;\n                    customerPO.placeholder = \"optional\";\n                }\n            };\n            promoOrderRadio?.addEventListener(\"change\", updateRequired);\n            cardRadio?.addEventListener(\"change\", updateRequired);\n            // Initialize once on load\n            updateRequired();\n        }\n    }, 250);\n}\n","export function setupCustomerPORequirement() {\n    const interval = setInterval(() => {\n        const promoOrderRadio = document.getElementById(\"purchaseOrder\");\n        const cardRadio = document.getElementById(\"newCC\");\n        const customerPO = document.getElementById(\"customerPO\");\n        const poLabel = document.querySelector(\"label[for='purchaseOrder']\");\n        const checkoutButton = document.getElementById(\"checkoutProceedButton\");\n        if (promoOrderRadio &&\n            cardRadio &&\n            customerPO &&\n            poLabel &&\n            checkoutButton) {\n            clearInterval(interval);\n            // Rename the radio label from \"Purchase Order\" to \"Promo Order\"\n            poLabel.textContent = \"Promo Order\";\n            const updateRequirement = () => {\n                const isPromoOrder = promoOrderRadio.checked;\n                const hasPO = customerPO.value.trim().length > 0;\n                customerPO.required = isPromoOrder;\n                customerPO.placeholder = isPromoOrder ? \"required\" : \"optional\";\n                customerPO.classList.toggle(\"required\", isPromoOrder);\n                // Show/hide the checkout button\n                if (isPromoOrder && !hasPO) {\n                    checkoutButton.style.display = \"none\";\n                }\n                else {\n                    checkoutButton.style.display = \"\";\n                }\n            };\n            // Event listeners\n            promoOrderRadio.addEventListener(\"change\", updateRequirement);\n            cardRadio.addEventListener(\"change\", updateRequirement);\n            customerPO.addEventListener(\"input\", updateRequirement);\n            customerPO.addEventListener(\"blur\", updateRequirement);\n            // Initial check\n            updateRequirement();\n        }\n    }, 250);\n}\n"],"names":["main","console","log","currentPage","ADDTOCART","CART","CATALOG","CHECKOUTADDRESS","CHECKOUTCONFIRMATION","CHECKOUTREVIEW","CHECKOUTSHIPPING","CREATEEDITACCOUNT","CUSTOMIZETEMPLATE","MYACCOUNT","VIEWORDERS","CHECKOUTPAYMENT","interval","setInterval","promoOrderRadio","document","getElementById","cardRadio","customerPO","poLabel","querySelector","checkoutButton","clearInterval","textContent","updateRequirement","isPromoOrder","checked","hasPO","value","trim","length","required","placeholder","classList","toggle","style","display","addEventListener","setupCustomerPORequirement","poRadio","updateRequired","customizePaymentMethod"],"sourceRoot":""}