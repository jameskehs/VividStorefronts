{"version":3,"file":"uniqueScript20.bundle.js","mappings":"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","sources":["webpack://vivid-storefronts/./src/shared/forceShippingCostToTBD.ts","webpack://vivid-storefronts/./src/shared/replaceShippingCostWithTBD.ts","webpack://vivid-storefronts/./src/shared/replaceSizeText.ts","webpack://vivid-storefronts/./src/shared/requirePOAndQuoteName.ts","webpack://vivid-storefronts/./src/store_scripts/CommunityCoffeeInventoryView/index.ts"],"sourcesContent":["export function forceShippingCostToTBD() {\n    const overrideShippingSummary = () => {\n        const shipPriceSpan = document.getElementById(\"shipPrice\");\n        const hiddenShipCost = document.getElementById(\"shipActualCost\");\n        if (!shipPriceSpan)\n            return;\n        const text = shipPriceSpan.textContent?.trim();\n        const numericValue = parseFloat(text?.replace(\"$\", \"\") || \"\");\n        // Only override if it's a valid cost > 0 and not already \"TBD\"\n        if (!isNaN(numericValue) && numericValue > 0 && text !== \"TBD\") {\n            // 1. Set visual display to \"TBD\"\n            shipPriceSpan.textContent = \"TBD\";\n            // 2. Set hidden cost to 0\n            if (hiddenShipCost) {\n                hiddenShipCost.value = \"0.00\";\n            }\n            // 3. Force recalculate grand total using 0 shipping cost\n            const rushPriceText = (document.getElementById(\"rushPrice\")?.textContent || \"\")\n                .replace(\"$\", \"\")\n                .trim();\n            const rushCost = parseFloat(rushPriceText) || 0;\n            const handlingText = (document.getElementById(\"handlingPrice\")?.textContent || \"\")\n                .replace(\"$\", \"\")\n                .trim();\n            const handlingCost = parseFloat(handlingText) || 0;\n            // Call existing global function if available\n            if (typeof window.update_order_summary_ui === \"function\") {\n                window.update_order_summary_ui(0, rushCost, handlingCost);\n            }\n        }\n    };\n    const shipPriceSpan = document.getElementById(\"shipPrice\");\n    if (shipPriceSpan) {\n        const observer = new MutationObserver(() => {\n            overrideShippingSummary();\n        });\n        observer.observe(shipPriceSpan, {\n            childList: true,\n            subtree: true,\n            characterData: true,\n        });\n    }\n    // Run immediately on load\n    overrideShippingSummary();\n}\n","export function replaceShippingCostWithTBD() {\n    const overrideShippingMethodTable = () => {\n        const shippingTable = document.getElementById(\"shipping_method_table\");\n        if (!shippingTable)\n            return;\n        const rows = shippingTable.querySelectorAll(\"tr\");\n        rows.forEach((row) => {\n            const cells = row.querySelectorAll(\"td\");\n            if (cells.length >= 5) {\n                const costCell = cells[4];\n                const text = costCell?.textContent?.trim();\n                const value = parseFloat(text?.replace(\"$\", \"\") || \"\");\n                if (!isNaN(value) && value > 0 && text !== \"TBD\") {\n                    costCell.textContent = \"TBD\";\n                }\n            }\n        });\n    };\n    const shippingTable = document.getElementById(\"shipping_method_table\");\n    if (shippingTable) {\n        const observer = new MutationObserver(() => {\n            overrideShippingMethodTable();\n        });\n        observer.observe(shippingTable, {\n            childList: true,\n            subtree: true,\n        });\n    }\n    // Initial run\n    overrideShippingMethodTable();\n}\n","// Future TODO: Replace all instanced of replaceSizeText with replaceAttrText\nexport function replaceSizeText(replacementText) {\n    $('.tablesorter tbody td').each((index, cell) => {\n        $(cell).text() === 'SIZE' && $(cell).html(`<strong>${replacementText}</strong>`);\n    });\n}\nexport function replaceAttrText(attribute, replacementText) {\n    $('.tablesorter tbody td').each((index, cell) => {\n        $(cell).text() === attribute && $(cell).html(`<strong>${replacementText.toUpperCase()}</strong>`);\n    });\n}\n","export function requirePOAndQuoteName() {\n    const interval = setInterval(() => {\n        const customerPO = document.getElementById(\"customerPO\");\n        const quoteName = document.getElementById(\"quoteName\");\n        const continueButton = document.getElementById(\"orderPayment\");\n        if (customerPO && quoteName && continueButton) {\n            clearInterval(interval);\n            const validateFields = () => {\n                const isPOFilled = customerPO.value.trim().length > 0;\n                const isQuoteFilled = quoteName.value.trim().length > 0;\n                const isValid = isPOFilled && isQuoteFilled;\n                continueButton.disabled = !isValid;\n                continueButton.style.opacity = isValid ? \"1\" : \"0.5\";\n                continueButton.style.cursor = isValid ? \"pointer\" : \"not-allowed\";\n            };\n            // Listen for user input\n            customerPO.addEventListener(\"input\", validateFields);\n            quoteName.addEventListener(\"input\", validateFields);\n            // Also check on blur just in case\n            customerPO.addEventListener(\"blur\", validateFields);\n            quoteName.addEventListener(\"blur\", validateFields);\n            // Initial validation\n            validateFields();\n        }\n    }, 250);\n}\n","// <script src=\"https://main--vividstorefronts.netlify.app/main.js\"></script>\n// <script>loadStorefrontScript(brandingProfile)</script>\nimport { StorefrontPage } from \"../../enums/StorefrontPage.enum\";\nimport { GLOBALVARS } from \"../../index\";\nimport { replaceAttrText } from \"../../shared/replaceSizeText\";\nimport { replaceShippingCostWithTBD } from \"../../shared/replaceShippingCostWithTBD\";\nimport { forceShippingCostToTBD } from \"../../shared/forceShippingCostToTBD\";\nimport { requirePOAndQuoteName } from \"../../shared/requirePOAndQuoteName\";\nexport function main() {\n    console.log(GLOBALVARS.currentPage);\n    $(\"body\").append(\"<div id='inventoryAccountNotice'><p>NOTE: You are on the inventory viewing site. Orders cannot be placed on this site.</p></div>\");\n    if (GLOBALVARS.currentPage === StorefrontPage.ADDTOCART) {\n        const productName = $(\".tablesorter tbody tr td\").eq(1).text().trim();\n        if (productName.includes(\"RTD Pricing Stickers\")) {\n            replaceAttrText(\"SIZE\", \"PRICE\");\n            replaceAttrText(\"COLOR\", \"DRINK SIZE\");\n        }\n        if (productName.includes(\"Magnetic Menu Board\")) {\n            replaceAttrText(\"SIZE\", \"PRICE\");\n        }\n        if (productName.includes(\"TF Server Label\")) {\n            console.log(\"Server Label\");\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3544&y=8333\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Label Page\");\n        }\n        if (productName.includes(\"RTD Pricing Sticker\")) {\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3545&y=8236\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Sticker Page\");\n        }\n        if (productName.includes(\"Tea Flavor Label\")) {\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3544&y=8343\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Sticker Page\");\n        }\n        if (productName.includes(\"Tea Grip\")) {\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3544&y=8342\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Sticker Page\");\n        }\n        if (productName.includes(\"Whole Bean Hopper Topper\")) {\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3544&y=8344\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Sticker Page\");\n        }\n        if (productName.includes(\"KanPak Label\")) {\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3544&y=8337\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Sticker Page\");\n        }\n        if (productName.includes(\"Infusion Label\")) {\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3544&y=8717\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Sticker Page\");\n        }\n        if (productName.includes(\"Hot Cappuccino Label\")) {\n            localStorage.setItem(\"redirect\", \"/catalog/?g=3544&y=8340\");\n            $(\"#addToCartButton\").text(\"Add to Cart & Return to Sticker Page\");\n        }\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CART) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CATALOG) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTADDRESS) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTCONFIRMATION) {\n        replaceShippingCostWithTBD();\n        forceShippingCostToTBD();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTPAYMENT) {\n        replaceShippingCostWithTBD();\n        forceShippingCostToTBD();\n        requirePOAndQuoteName();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTREVIEW) {\n        replaceShippingCostWithTBD();\n        forceShippingCostToTBD();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTSHIPPING) {\n        replaceShippingCostWithTBD();\n        forceShippingCostToTBD();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CREATEEDITACCOUNT) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CUSTOMIZETEMPLATE) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.MYACCOUNT) {\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.VIEWORDERS) {\n    }\n}\nfunction convertMenuTextToIcons() {\n    const iconMap = {\n        HOME: \"fa-home\",\n        CATALOG: \"fa-book-open\",\n        \"MY ACCOUNT\": \"fa-user\",\n        \"SHOPPING CART\": \"fa-shopping-cart\",\n    };\n    const tryConvert = () => {\n        const menuItems = document.querySelectorAll(\"#menu li\");\n        if (menuItems.length === 0) {\n            setTimeout(tryConvert, 200);\n            return;\n        }\n        menuItems.forEach((item) => {\n            const link = item.querySelector(\"a\");\n            if (link) {\n                const rawText = link.textContent?.trim().toUpperCase();\n                // Match based on start of menu text\n                const matchedKey = Object.keys(iconMap).find((key) => rawText?.startsWith(key));\n                const iconClass = matchedKey ? iconMap[matchedKey] : \"\";\n                if (iconClass) {\n                    const countMatch = rawText?.match(/\\((\\d+)\\)/)?.[1];\n                    // Create a container span to wrap icon and badge\n                    link.innerHTML = `\n    <span class=\"icon-wrap\">\n      <i class=\"fa ${iconClass}\"></i>\n      ${countMatch ? `<span class=\"badge\">${countMatch}</span>` : \"\"}\n    </span>\n  `;\n                    link.setAttribute(\"title\", rawText || \"\");\n                }\n            }\n        });\n    };\n    document.readyState === \"loading\"\n        ? document.addEventListener(\"DOMContentLoaded\", tryConvert)\n        : tryConvert();\n}\nconvertMenuTextToIcons();\n"],"names":["forceShippingCostToTBD","overrideShippingSummary","shipPriceSpan","document","getElementById","hiddenShipCost","text","textContent","trim","numericValue","parseFloat","replace","isNaN","value","rushPriceText","rushCost","handlingText","handlingCost","window","update_order_summary_ui","MutationObserver","observe","childList","subtree","characterData","replaceShippingCostWithTBD","overrideShippingMethodTable","shippingTable","querySelectorAll","forEach","row","cells","length","costCell","replaceSizeText","replacementText","$","each","index","cell","html","replaceAttrText","attribute","toUpperCase","requirePOAndQuoteName","interval","setInterval","customerPO","quoteName","continueButton","clearInterval","validateFields","isPOFilled","isQuoteFilled","isValid","disabled","style","opacity","cursor","addEventListener","main","console","log","currentPage","append","ADDTOCART","productName","eq","includes","localStorage","setItem","CART","CATALOG","CHECKOUTADDRESS","CHECKOUTCONFIRMATION","CHECKOUTPAYMENT","CHECKOUTREVIEW","CHECKOUTSHIPPING","CREATEEDITACCOUNT","CUSTOMIZETEMPLATE","MYACCOUNT","VIEWORDERS","iconMap","HOME","tryConvert","menuItems","item","link","querySelector","rawText","matchedKey","Object","keys","find","key","startsWith","iconClass","countMatch","match","innerHTML","setAttribute","setTimeout","readyState","convertMenuTextToIcons"],"sourceRoot":""}