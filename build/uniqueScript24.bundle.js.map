{"version":3,"file":"uniqueScript24.bundle.js","mappings":"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","sources":["webpack://vivid-storefronts/./src/shared/BlockOnResidentialToast.ts","webpack://vivid-storefronts/./src/shared/persistDiscountedTotals.ts","webpack://vivid-storefronts/./src/store_scripts/DonsConsumer/index.ts"],"sourcesContent":["export function monitorResidentialToastAndBlockPage() {\n    if (!document.getElementById(\"page-blocker-overlay\")) {\n        const overlay = document.createElement(\"div\");\n        overlay.id = \"page-blocker-overlay\";\n        overlay.style.position = \"fixed\";\n        overlay.style.top = \"0\";\n        overlay.style.left = \"0\";\n        overlay.style.width = \"100vw\";\n        overlay.style.height = \"100vh\";\n        overlay.style.backgroundColor = \"rgba(0, 0, 0, 0.3)\";\n        overlay.style.zIndex = \"9998\";\n        overlay.style.display = \"none\";\n        document.body.appendChild(overlay);\n    }\n    const overlay = document.getElementById(\"page-blocker-overlay\");\n    const pollInterval = setInterval(() => {\n        const toast = document.querySelector(\".jq-toast-single\");\n        if (toast &&\n            toast.textContent?.includes(\"The USPS database indicates your address is Residential\")) {\n            overlay.style.display = \"block\";\n            // Remove the close (Ã—) button\n            const closeBtn = toast.querySelector(\".close-jq-toast-single\");\n            if (closeBtn)\n                closeBtn.remove();\n            // Replace toast content with updated message and inline \"go back\" link\n            toast.innerHTML = `\n        <strong class=\"sans red\">Important Message</strong><br>\n        The USPS database indicates your address is Residential, but you have it flagged as Commercial.<br>\n        Please <a href=\"5-shipping.php\" style=\"color: red; font-weight: bold; text-decoration: underline;\">go back</a> and click the Verify Address button to ensure the most reliable package delivery.<br>\n        We verify all addresses with the USPS address database.\n      `;\n            clearInterval(pollInterval);\n        }\n    }, 300);\n}\n","export function persistDiscountedTotals() {\n    const subPrice = document.getElementById(\"subPrice\");\n    const taxPrice = document.getElementById(\"taxPrice\");\n    const grandPrice = document.getElementById(\"grandPrice\");\n    const storedSubtotal = localStorage.getItem(\"discountedSubtotal\");\n    const storedTax = localStorage.getItem(\"discountedTax\");\n    const storedTotal = localStorage.getItem(\"discountedTotal\");\n    const storedDiscount = localStorage.getItem(\"promoDiscount\");\n    if (!subPrice || !taxPrice || !grandPrice)\n        return;\n    // Store original values if not already stored\n    if (!subPrice.dataset.original) {\n        subPrice.dataset.original =\n            subPrice.textContent?.replace(\"$\", \"\").trim() || \"\";\n    }\n    if (!taxPrice.dataset.original) {\n        taxPrice.dataset.original =\n            taxPrice.textContent?.replace(\"$\", \"\").trim() || \"\";\n    }\n    if (!grandPrice.dataset.original) {\n        grandPrice.dataset.original =\n            grandPrice.textContent?.replace(\"$\", \"\").trim() || \"\";\n    }\n    if (storedSubtotal && storedTax && storedTotal && storedDiscount) {\n        subPrice.textContent = parseFloat(storedSubtotal).toFixed(2);\n        taxPrice.textContent = parseFloat(storedTax).toFixed(2);\n        grandPrice.textContent = parseFloat(storedTotal).toFixed(2);\n        // Inject the promo discount row if not already present\n        const lineItemsTable = document.querySelector(\"#lineItems table\");\n        if (lineItemsTable && !document.getElementById(\"discountRow\")) {\n            const row = lineItemsTable.insertRow(3); // Adjust this index if needed\n            row.id = \"discountRow\";\n            const cell1 = row.insertCell(0);\n            cell1.textContent = \"Promo Discount:\";\n            const cell2 = row.insertCell(1);\n            cell2.innerHTML = `$<span id=\"promoDiscount\">-${parseFloat(storedDiscount).toFixed(2)}</span>`;\n            cell2.style.textAlign = \"right\";\n        }\n    }\n}\n","import { StorefrontPage } from \"../../enums/StorefrontPage.enum\";\nimport { GLOBALVARS } from \"../../index\";\nimport { persistDiscountedTotals } from \"../../shared/persistDiscountedTotals\";\nimport { monitorResidentialToastAndBlockPage } from \"../../shared/BlockOnResidentialToast\";\nexport function main() {\n    function hideAvailableQtyOnce() {\n        let changed = false;\n        // Primary: hide by the known span id\n        const qtySpan = document.getElementById(\"qtyAvailableDisplay\");\n        if (qtySpan) {\n            const tr = qtySpan.closest(\"tr\");\n            if (tr && tr.style.display !== \"none\") {\n                tr.style.display = \"none\";\n                changed = true;\n            }\n        }\n        // Fallback: find any row whose left cell label is \"AVAILABLE\"\n        const rows = document.querySelectorAll(\"table.tablesorter tr\");\n        rows.forEach((row) => {\n            const labelCellStrong = row.querySelector(\"td:first-child > strong\");\n            const label = labelCellStrong?.textContent?.trim().toUpperCase() ?? \"\";\n            if (label === \"AVAILABLE\" && row.style.display !== \"none\") {\n                row.style.display = \"none\";\n                changed = true;\n            }\n        });\n        // Also neutralize the hidden inputâ€™s value if you want:\n        const hiddenInput = document.querySelector(\"#qtyAvailable\");\n        if (hiddenInput)\n            hiddenInput.value = \"\";\n        return changed;\n    }\n    function watchAndHideAvailableQty(durationMs = 10000) {\n        // Run immediately\n        hideAvailableQtyOnce();\n        // Observe for dynamic updates\n        const observer = new MutationObserver(() => {\n            hideAvailableQtyOnce();\n        });\n        observer.observe(document.body, { childList: true, subtree: true });\n        // Stop after a short window to avoid overhead\n        setTimeout(() => observer.disconnect(), durationMs);\n    }\n    /**\n     * USPS first: Reorder rows in #shipping_method_table so USPS options appear first.\n     * Does NOT change the current selection by default.\n     */\n    function prioritizeUSPSRows() {\n        const AUTO_SELECT_USPS = false; // set to true if you want USPS auto-selected when present\n        const table = document.querySelector(\"#shipping_method_table\");\n        if (!table)\n            return;\n        const tbody = table.tBodies?.[0] || table.querySelector(\"tbody\");\n        if (!tbody)\n            return;\n        // Collect rows; keep track of special rows that should stay at the very top in original order.\n        const allRows = Array.from(tbody.querySelectorAll(\"tr\"));\n        if (allRows.length === 0)\n            return;\n        const specialRowIds = new Set([\"tbdShippingRow\", \"loadShippingRow\"]);\n        const specialRows = [];\n        const carrierRows = [];\n        for (const row of allRows) {\n            const id = row.id || \"\";\n            if (specialRowIds.has(id)) {\n                specialRows.push(row);\n            }\n            else {\n                carrierRows.push(row);\n            }\n        }\n        // Partition carrierRows into USPS vs non-USPS using the radio input's data-carriertype\n        const uspsRows = [];\n        const otherRows = [];\n        for (const row of carrierRows) {\n            // ignore hidden rows\n            if (row.style.display === \"none\") {\n                otherRows.push(row);\n                continue;\n            }\n            const radio = row.querySelector(\"input[type='radio'][name='shipMethod']\");\n            const carrierType = radio?.getAttribute(\"data-carriertype\")?.trim().toUpperCase() || \"\";\n            if (carrierType === \"USPS\") {\n                uspsRows.push(row);\n            }\n            else {\n                otherRows.push(row);\n            }\n        }\n        if (uspsRows.length === 0) {\n            // Nothing to do if USPS not present\n            return;\n        }\n        // Remember currently checked value to preserve selection after reordering.\n        const checkedRadio = tbody.querySelector(\"input[type='radio'][name='shipMethod']:checked\");\n        const checkedValue = checkedRadio?.value ?? null;\n        // Rebuild order: special rows (in original order) + USPS rows + other rows\n        const newOrder = [...specialRows, ...uspsRows, ...otherRows];\n        // Only rewrite DOM if order actually changes to avoid flicker\n        const changed = newOrder.length !== allRows.length ||\n            newOrder.some((row, i) => row !== allRows[i]);\n        if (changed) {\n            // Detach all, then append in new order\n            const frag = document.createDocumentFragment();\n            newOrder.forEach((r) => frag.appendChild(r));\n            tbody.appendChild(frag);\n            // Reapply zebra striping classes (o/e) to carrier rows only (keep special rows as-is)\n            reapplyZebraStriping(tbody, specialRowIds);\n            // Restore previous selection (if it existed)\n            if (checkedValue) {\n                const newChecked = tbody.querySelector(`input[type='radio'][name='shipMethod'][value='${CSS.escape(checkedValue)}']`);\n                if (newChecked && !newChecked.checked) {\n                    newChecked.checked = true;\n                }\n            }\n            // Optionally auto-select the first USPS row\n            if (AUTO_SELECT_USPS) {\n                const firstUSPS = uspsRows[0].querySelector(\"input[type='radio'][name='shipMethod']\");\n                if (firstUSPS && !firstUSPS.checked) {\n                    // Some sites rely on onclick handlers to recompute totals, so trigger click if present.\n                    firstUSPS.click();\n                }\n            }\n        }\n    }\n    function reapplyZebraStriping(tbody, specialRowIds) {\n        let toggle = 0; // 0 => 'o', 1 => 'e'\n        const rows = Array.from(tbody.querySelectorAll(\"tr\"));\n        rows.forEach((row) => {\n            if (specialRowIds.has(row.id)) {\n                return; // keep special rows untouched\n            }\n            row.classList.remove(\"o\", \"e\");\n            row.classList.add(toggle % 2 === 0 ? \"o\" : \"e\");\n            toggle++;\n        });\n    }\n    /**\n     * Start observing the shipping table so when the platform re-renders options,\n     * USPS rows get bubbled to the top again.\n     */\n    function observeShippingTable() {\n        const table = document.querySelector(\"#shipping_method_table\");\n        if (!table)\n            return;\n        // Run once immediately (in case rows are already there)\n        prioritizeUSPSRows();\n        const observer = new MutationObserver(() => {\n            prioritizeUSPSRows();\n        });\n        observer.observe(table, {\n            childList: true,\n            subtree: true,\n        });\n        // Graceful stop after a short window (adjust if your page reflows longer)\n        setTimeout(() => observer.disconnect(), 15000);\n    }\n    function whenShippingTableReady(cb, timeoutMs = 12000) {\n        const start = Date.now();\n        const poll = () => {\n            const table = document.querySelector(\"#shipping_method_table tbody\");\n            const hasOptions = !!table &&\n                table.querySelectorAll(\"input[type='radio'][name='shipMethod']\")\n                    .length > 0;\n            if (hasOptions) {\n                cb();\n                return;\n            }\n            if (Date.now() - start > timeoutMs) {\n                // Give up silently\n                return;\n            }\n            setTimeout(poll, 150);\n        };\n        poll();\n    }\n    function init() {\n        const isAddToCartPage = () => {\n            const page = GLOBALVARS?.currentPage?.trim().toLowerCase() || \"\";\n            return (page.includes(\"add to cart\") ||\n                window.location.pathname.includes(\"/cart/3-edit.php\"));\n        };\n        // Always try to hide AVAILABLE row on relevant pages\n        const onCheckoutPage = GLOBALVARS.currentPage === StorefrontPage.CHECKOUTSHIPPING ||\n            GLOBALVARS.currentPage === StorefrontPage.CHECKOUTPAYMENT ||\n            GLOBALVARS.currentPage === StorefrontPage.CHECKOUTCONFIRMATION ||\n            window.location.pathname.includes(\"/checkout/\");\n        if (isAddToCartPage() || onCheckoutPage) {\n            watchAndHideAvailableQty(12000);\n        }\n        // USPS prioritization only on the shipping step\n        if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTSHIPPING) {\n            whenShippingTableReady(() => {\n                // One more immediate pass in case the table appeared between polls\n                prioritizeUSPSRows();\n                // Then observe for subsequent re-renders (ajax loads, rate recalcs, etc.)\n                observeShippingTable();\n            });\n        }\n        // --- Hide .buttonContainer ONLY on the Add to Cart page ---\n        if (isAddToCartPage()) {\n            // 1) Inject CSS so any future re-renders stay hidden\n            if (!document.getElementById(\"hideButtonsOnATC\")) {\n                const style = document.createElement(\"style\");\n                style.id = \"hideButtonsOnATC\";\n                style.textContent = `\n          /* Be precise so we don't accidentally hide other pages' buttons */\n          #productImageCol .buttonContainer { display: none !important; }\n        `;\n                document.head.appendChild(style);\n            }\n            // 2) Also hide any existing nodes immediately (in case CSS arrives a tick later)\n            document\n                .querySelectorAll(\"#productImageCol .buttonContainer\")\n                .forEach((el) => (el.style.display = \"none\"));\n        }\n        // --- End Add to Cart hide ---\n        // === Existing image swap logic for Add to Cart ===\n        if (isAddToCartPage()) {\n            const img = document.getElementById(\"productImage\");\n            const artID = window.p?.artID;\n            if (img && artID) {\n                const origin = window.location.origin;\n                const uniqueNoCache = Date.now();\n                const desiredURL = `${origin}/catalog/gen/pdf_art_image.php?artID=${artID}&nocache=${uniqueNoCache}`;\n                const fixImg = () => {\n                    if (img.src.startsWith(`${origin}/.cache`)) {\n                        img.src = desiredURL;\n                        img.width = 400;\n                        img.style.height = \"auto\";\n                    }\n                };\n                fixImg();\n                const interval = setInterval(fixImg, 300);\n                setTimeout(() => clearInterval(interval), 10000);\n            }\n        }\n    }\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", init);\n    }\n    else {\n        init();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTSHIPPING) {\n        $(\"#continueTbl .smallbody\")\n            .eq(1)\n            .html(`<span class=\"red\">*</span> Delivery time listed includes 1 to 2 days to process order plus shipping.\n      Please note we do not process orders on weekends or holidays.`);\n        monitorResidentialToastAndBlockPage();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTCONFIRMATION) {\n        persistDiscountedTotals();\n    }\n    if (GLOBALVARS.currentPage === StorefrontPage.CHECKOUTPAYMENT ||\n        window.location.pathname.includes(\"/checkout/4-payment.php\")) {\n        // (No-op; reserved for future payment-page logic)\n    }\n}\nmain();\nfunction convertMenuTextToIcons() {\n    const iconMap = {\n        HOME: \"fa-home\",\n        CATALOG: \"fa-book-open\",\n        \"MY ACCOUNT\": \"fa-user\",\n        \"SHOPPING CART\": \"fa-shopping-cart\",\n    };\n    const tryConvert = () => {\n        const menuItems = document.querySelectorAll(\"#menu li\");\n        if (menuItems.length === 0) {\n            setTimeout(tryConvert, 200);\n            return;\n        }\n        menuItems.forEach((item) => {\n            const link = item.querySelector(\"a\");\n            if (link) {\n                const rawText = link.textContent?.trim().toUpperCase();\n                const matchedKey = Object.keys(iconMap).find((key) => rawText?.startsWith(key));\n                const iconClass = matchedKey ? iconMap[matchedKey] : \"\";\n                if (matchedKey === \"CATALOG\") {\n                    link.setAttribute(\"href\", \"/catalog/?g=3830&y=9150\");\n                }\n                if (iconClass) {\n                    const countMatch = rawText?.match(/\\((\\d+)\\)/)?.[1];\n                    link.innerHTML = `\n            <span class=\"icon-wrap\">\n              <i class=\"fa ${iconClass}\"></i>\n              ${countMatch ? `<span class=\"badge\">${countMatch}</span>` : \"\"}\n            </span>\n          `;\n                    link.setAttribute(\"title\", rawText || \"\");\n                }\n            }\n        });\n    };\n    document.readyState === \"loading\"\n        ? document.addEventListener(\"DOMContentLoaded\", tryConvert)\n        : tryConvert();\n}\nconvertMenuTextToIcons();\n"],"names":["monitorResidentialToastAndBlockPage","document","getElementById","overlay","createElement","id","style","position","top","left","width","height","backgroundColor","zIndex","display","body","appendChild","pollInterval","setInterval","toast","querySelector","textContent","includes","closeBtn","remove","innerHTML","clearInterval","persistDiscountedTotals","subPrice","taxPrice","grandPrice","storedSubtotal","localStorage","getItem","storedTax","storedTotal","storedDiscount","dataset","original","replace","trim","parseFloat","toFixed","lineItemsTable","row","insertRow","insertCell","cell2","textAlign","main","hideAvailableQtyOnce","changed","qtySpan","tr","closest","querySelectorAll","forEach","labelCellStrong","toUpperCase","hiddenInput","value","prioritizeUSPSRows","table","tbody","tBodies","allRows","Array","from","length","specialRowIds","Set","specialRows","carrierRows","has","push","uspsRows","otherRows","radio","getAttribute","checkedRadio","checkedValue","newOrder","some","i","frag","createDocumentFragment","r","toggle","rows","classList","add","reapplyZebraStriping","newChecked","CSS","escape","checked","init","isAddToCartPage","currentPage","toLowerCase","window","location","pathname","onCheckoutPage","CHECKOUTSHIPPING","CHECKOUTPAYMENT","CHECKOUTCONFIRMATION","durationMs","observer","MutationObserver","observe","childList","subtree","setTimeout","disconnect","watchAndHideAvailableQty","cb","timeoutMs","start","Date","now","poll","whenShippingTableReady","observeShippingTable","head","el","img","artID","p","origin","uniqueNoCache","desiredURL","fixImg","src","startsWith","interval","readyState","addEventListener","$","eq","html","iconMap","HOME","CATALOG","tryConvert","menuItems","item","link","rawText","matchedKey","Object","keys","find","key","iconClass","setAttribute","countMatch","match","convertMenuTextToIcons"],"sourceRoot":""}